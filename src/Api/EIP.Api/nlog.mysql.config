<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  autoReload="true"
	  throwExceptions="false"
	  internalLogLevel="Off"
	  internalLogFile="NlogRecords.log">
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		<add assembly="NLog.Database"/>
	</extensions>
	<!--autoReload属性，true时，如果NLog.config文件有变动，会自动应用新配置（但是会有延迟，过几秒才会应用起来）
	internalLogLevel属性，设定后，输出的是NLog内部自己的日志记录，如果遇到NLog异常/配置文件没配好，可以把Off改为Trace或Debug来查看NlogRecords.log里的内容
	internalLogFile属性，可以设定路径，例如默认的D:\Logs\aspNet.log-->
	<targets>
		<!--写入文本日志-->
		<target name="SystemFileTraceLog" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target xsi:type="File" fileName="${basedir}/App_Data/Trace/${date:format=yyyy-MM-dd HH}.log"
					layout="${longdate}|${message} ${exception}" />
		</target>
		<target name="SystemFileDebugLog" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target xsi:type="File" fileName="${basedir}/App_Data/Debug/${date:format=yyyy-MM-dd HH}.log"
					layout="${longdate}|${message} ${exception}" />
		</target>

		<target name="SystemFileInfoLog" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target xsi:type="File" fileName="${basedir}/App_Data/Info/${date:format=yyyy-MM-dd HH}.log"
					layout="${longdate}|${message} ${exception}" />
		</target>

		<target name="SystemFileWarnLog" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target xsi:type="File" fileName="${basedir}/App_Data/Warn/${date:format=yyyy-MM-dd HH}.log"
					layout="${longdate}|${message} ${exception}" />
		</target>

		<target name="SystemFileErrorLog" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target xsi:type="File" fileName="${basedir}/App_Data/Error/${date:format=yyyy-MM-dd HH}.log"
					layout="${longdate}|${message} ${exception}" />
		</target>

		<target name="SystemFileFatalLog" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target xsi:type="File" fileName="${basedir}/App_Data/Fatal/${date:format=yyyy-MM-dd HH}.log"
					layout="${longdate}|${message} ${exception}" />
		</target>

		<!-- 不写日志 -->
		<target xsi:type="Null" name="blackhole" />

		<!--写入登录日志信息到数据库-->
		<target xsi:type="AsyncWrapper" name="SystemLoginLog" queueLimit="5000" overflowAction="Discard">
			<target type="Database"
					dbProvider="MySql.Data.MySqlClient.MySqlConnection,Mysql.Data"
					connectionString="${var:connectionString}">
				<commandText>
					INSERT INTO System_LoginLog
					(LoginLogId
					,RemoteIp
					,RemoteIpAddress
					,UserAgent
					,OsInfo
					,Browser
					,LoginTime
					,StandingTime
					,CreateUserId
					,CreateUserCode
					,CreateUserName
					,CreateTime)
					VALUES
					(@LoginLogId
					,@RemoteIp
					,@RemoteIpAddress
					,@UserAgent
					,@OsInfo
					,@Browser
					,@LoginTime
					,@StandingTime
					,@CreateUserId
					,@CreateUserCode
					,@CreateUserName
					,@CreateTime)
				</commandText>

				<!-- 参数 -->
				<parameter name="@LoginLogId" layout="${event-context:item=LoginLogId}" />
				<parameter name="@RemoteIp" layout="${event-context:item=RemoteIp}" />
				<parameter name="@RemoteIpAddress" layout="${event-context:item=RemoteIpAddress}" />
				<parameter name="@UserAgent" layout="${event-context:item=UserAgent}" />
				<parameter name="@OsInfo" layout="${event-context:item=OsInfo}" />
				<parameter name="@Browser" layout="${event-context:item=Browser}" />
				<parameter name="@LoginTime" layout="${event-context:item=LoginTime}" />
				<parameter name="@StandingTime" layout="${event-context:item=StandingTime}" />
				<parameter name="@CreateUserId" layout="${event-context:item=CreateUserId}" />
				<parameter name="@CreateUserCode" layout="${event-context:item=CreateUserCode}" />
				<parameter name="@CreateUserName" layout="${event-context:item=CreateUserName}" />
				<parameter name="@CreateTime" layout="${event-context:item=CreateTime}" />
			</target>
		</target>

		<!--更新登录日志信息到数据库-->
		<target xsi:type="AsyncWrapper" name="SystemLoginOutLog" queueLimit="5000" overflowAction="Discard">
			<target type="Database"
					dbProvider="MySql.Data.MySqlClient.MySqlConnection,Mysql.Data"
					connectionString="${var:connectionString}">
				<commandText>
					update system_loginlog set LoginOutTime=@LoginOutTime,StandingTime=Round(timestampdiff(second,LoginTime,@LoginOutTime)/60,2) where LoginLogId=@LoginLogId
				</commandText>
				<!-- 参数 -->
				<parameter name="@LoginLogId" layout="${event-context:item=LoginLogId}" />
				<parameter name="@LoginOutTime" layout="${event-context:item=LoginOutTime}" />
			</target>
		</target>

		<!--写入操作日志信息到数据库-->
		<target xsi:type="AsyncWrapper" name="SystemOperationLog" queueLimit="5000" overflowAction="Discard">
			<target type="Database"
					dbProvider="MySql.Data.MySqlClient.MySqlConnection,Mysql.Data"
					connectionString="${var:connectionString}">
				<commandText>
					INSERT INTO System_OperationLog
					(OperationLogId
					,RemoteIp
					,RemoteIpAddress
					,UserAgent
					,OsInfo
					,Browser
					,RequestContentLength
					,RequestType
					,Url
					,RequestData
					,ControllerName
					,ActionName
					,ActionExecutionTime
					,ResultExecutionTime
					,ResponseStatus
					,ResponseData
					,Remark
					,RemarkFrom
					,CreateUserId
					,CreateUserCode
					,CreateUserName
					,CreateTime)
					VALUES
					(@OperationLogId
					,@RemoteIp
					,@RemoteIpAddress
					,@UserAgent
					,@OsInfo
					,@Browser
					,@RequestContentLength
					,@RequestType
					,@Url
					,@RequestData
					,@ControllerName
					,@ActionName
					,@ActionExecutionTime
					,@ResultExecutionTime
					,@ResponseStatus
					,@ResponseData
					,@Remark
					,@RemarkFrom
					,@CreateUserId
					,@CreateUserCode
					,@CreateUserName
					,@CreateTime)
				</commandText>

				<!-- 参数 -->
				<parameter name="@OperationLogId" layout="${event-context:item=OperationLogId}" />
				<parameter name="@RemoteIp" layout="${event-context:item=RemoteIp}" />
				<parameter name="@RemoteIpAddress" layout="${event-context:item=RemoteIpAddress}" />
				<parameter name="@UserAgent" layout="${event-context:item=UserAgent}" />
				<parameter name="@OsInfo" layout="${event-context:item=OsInfo}" />
				<parameter name="@Browser" layout="${event-context:item=Browser}" />
				<parameter name="@RequestContentLength" layout="${event-context:item=RequestContentLength}" />
				<parameter name="@RequestType" layout="${event-context:item=RequestType}" />
				<parameter name="@Url" layout="${event-context:item=Url}" />
				<parameter name="@RequestData" layout="${event-context:item=RequestData}" />
				<parameter name="@ControllerName" layout="${event-context:item=ControllerName}" />
				<parameter name="@ActionName" layout="${event-context:item=ActionName}" />
				<parameter name="@ActionExecutionTime" layout="${event-context:item=ActionExecutionTime}" />
				<parameter name="@ResultExecutionTime" layout="${event-context:item=ResultExecutionTime}" />
				<parameter name="@ResponseStatus" layout="${event-context:item=ResponseStatus}" />
				<parameter name="@ResponseData" layout="${event-context:item=ResponseData}" />
				<parameter name="@Remark" layout="${event-context:item=Remark}" />
				<parameter name="@RemarkFrom" layout="${event-context:item=RemarkFrom}" />
				<parameter name="@CreateUserId" layout="${event-context:item=CreateUserId}" />
				<parameter name="@CreateUserCode" layout="${event-context:item=CreateUserCode}" />
				<parameter name="@CreateUserName" layout="${event-context:item=CreateUserName}" />
				<parameter name="@CreateTime" layout="${event-context:item=CreateTime}" />
			</target>
		</target>

		<!--写入异常日志信息到数据库-->
		<target xsi:type="AsyncWrapper" name="SystemExceptionLog" queueLimit="5000" overflowAction="Discard">
			<target type="Database"
					dbProvider="MySql.Data.MySqlClient.MySqlConnection,Mysql.Data"
					connectionString="${var:connectionString}">
				<commandText>
					INSERT INTO System_ExceptionLog
					(ExceptionLogId
					,Message
					,StackTrace
					,InnerException
					,RemoteIp
					,RemoteIpAddress
					,UserAgent
					,OsInfo
					,Browser
					,RequestUrl
					,RequestData
					,HttpMethod
					,CreateUserId
					,CreateUserCode
					,CreateUserName
					,CreateTime
					,Remark
					,RemarkFrom)
					VALUES
					(@ExceptionLogId
					,@Message
					,@StackTrace
					,@InnerException
					,@RemoteIp
					,@RemoteIpAddress
					,@UserAgent
					,@OsInfo
					,@Browser
					,@RequestUrl
					,@RequestData
					,@HttpMethod
					,@CreateUserId
					,@CreateUserCode
					,@CreateUserName
					,@CreateTime
					,@Remark
					,@RemarkFrom
					)
				</commandText>

				<!-- 参数 -->
				<parameter name="@ExceptionLogId" layout="${event-context:item=ExceptionLogId}" />
				<parameter name="@Message" layout="${event-context:item=Message}" />
				<parameter name="@StackTrace" layout="${event-context:item=StackTrace}" />
				<parameter name="@InnerException" layout="${event-context:item=InnerException}" />
				<parameter name="@RemoteIp" layout="${event-context:item=RemoteIp}" />
				<parameter name="@RemoteIpAddress" layout="${event-context:item=RemoteIpAddress}" />
				<parameter name="@UserAgent" layout="${event-context:item=UserAgent}" />
				<parameter name="@OsInfo" layout="${event-context:item=OsInfo}" />
				<parameter name="@Browser" layout="${event-context:item=Browser}" />
				<parameter name="@RequestUrl" layout="${event-context:item=RequestUrl}" />
				<parameter name="@RequestData" layout="${event-context:item=RequestData}" />
				<parameter name="@HttpMethod" layout="${event-context:item=HttpMethod}" />
				<parameter name="@CreateUserId" layout="${event-context:item=CreateUserId}" />
				<parameter name="@CreateUserCode" layout="${event-context:item=CreateUserCode}" />
				<parameter name="@CreateUserName" layout="${event-context:item=CreateUserName}" />
				<parameter name="@CreateTime" layout="${event-context:item=CreateTime}" />
				<parameter name="@Remark" layout="${event-context:item=Remark}" />
				<parameter name="@RemarkFrom" layout="${event-context:item=RemarkFrom}" />
			</target>
		</target>

		<!--写入限流日志信息到数据库-->
		<target xsi:type="AsyncWrapper" name="SystemRateLimitLog" queueLimit="5000" overflowAction="Discard">
			<target type="Database"
					dbProvider="MySql.Data.MySqlClient.MySqlConnection,Mysql.Data"
					connectionString="${var:connectionString}">
				<commandText>
					INSERT INTO System_RateLimitLog
					(RateLimitLogId
					,ControllerName
					,ActionName
					,Message
					,RemoteIp
					,RequestContentLength
					,RequestType
					,Url
					,RequestData
					,CreateUserId
					,CreateUserCode
					,CreateUserName
					,CreateTime)
					VALUES
					(@RateLimitLogId
					,@ControllerName
					,@ActionName
					,@Message
					,@RemoteIp
					,@RequestContentLength
					,@RequestType
					,@Url
					,@RequestData
					,@CreateUserId
					,@CreateUserCode
					,@CreateUserName
					,@CreateTime
					)
				</commandText>

				<!-- 参数 -->
				<parameter name="@RateLimitLogId" layout="${event-context:item=RateLimitLogId}" />
				<parameter name="@ControllerName" layout="${event-context:item=ControllerName}" />
				<parameter name="@ActionName" layout="${event-context:item=ActionName}" />
				<parameter name="@Message" layout="${event-context:item=Message}" />
				<parameter name="@RemoteIp" layout="${event-context:item=RemoteIp}" />
				<parameter name="@RequestContentLength" layout="${event-context:item=RequestContentLength}" />
				<parameter name="@RequestType" layout="${event-context:item=RequestType}" />
				<parameter name="@Url" layout="${event-context:item=Url}" />
				<parameter name="@RequestData" layout="${event-context:item=RequestData}" />
				<parameter name="@CreateUserId" layout="${event-context:item=CreateUserId}" />
				<parameter name="@CreateUserCode" layout="${event-context:item=CreateUserCode}" />
				<parameter name="@CreateUserName" layout="${event-context:item=CreateUserName}" />
				<parameter name="@CreateTime" layout="${event-context:item=CreateTime}" />
			</target>
		</target>

		<!--写入任务日志信息到数据库-->
		<target xsi:type="AsyncWrapper" name="SystemJobLog" queueLimit="5000" overflowAction="Discard">
			<target type="Database"
					dbProvider="MySql.Data.MySqlClient.MySqlConnection,Mysql.Data"
					connectionString="${var:connectionString}">
				<commandText>
					INSERT INTO system_joblog
					(JobLogId
					,Correlation
					,Message
					,CreateTime)
					VALUES
					(@JobLogId
					,@Correlation
					,@Message
					,@CreateTime
					)
				</commandText>

				<!-- 参数 -->
				<parameter name="@JobLogId" layout="${event-context:item=JobLogId}" />
				<parameter name="@Correlation" layout="${event-context:item=Correlation}" />
				<parameter name="@Message" layout="${event-context:item=Message}" />
				<parameter name="@CreateTime" layout="${event-context:item=CreateTime}" />
			</target>
		</target>

		<!--写入短信日志-->
		<target xsi:type="AsyncWrapper" name="SaveSmsLog" queueLimit="5000" overflowAction="Discard">
			<target type="Database"
					dbProvider="MySql.Data.MySqlClient.MySqlConnection,Mysql.Data"
					connectionString="${var:connectionString}">
				<commandText>
					INSERT INTO System_SmsLog
					(SmsLogId
					,Phone
					,Message
					,Provide
					,Code
					,CreateTime
					,Request
					,Response
					,IsSend)
					VALUES
					(@SmsLogId
					,@Phone
					,@Message
					,@Provide
					,@Code
					,@CreateTime
					,@Request
					,@Response
					,@IsSend)
				</commandText>

				<!-- 参数 -->
				<parameter name="@SmsLogId" layout="${event-context:item=SmsLogId}" />
				<parameter name="@Phone" layout="${event-context:item=Phone}" />
				<parameter name="@Message" layout="${event-context:item=Message}" />
				<parameter name="@Provide" layout="${event-context:item=Provide}" />
				<parameter name="@Code" layout="${event-context:item=Code}" />
				<parameter name="@CreateTime" layout="${event-context:item=CreateTime}" />
				<parameter name="@Request" layout="${event-context:item=Request}" />
				<parameter name="@Response" layout="${event-context:item=Response}" />
				<parameter name="@IsSend" layout="${event-context:item=IsSend}" />
			</target>
		</target>

		<!--写入邮件日志-->
		<target xsi:type="AsyncWrapper" name="SaveEmailLog" queueLimit="5000" overflowAction="Discard">
			<target type="Database"
					dbProvider="MySql.Data.MySqlClient.MySqlConnection,Mysql.Data"
					connectionString="${var:connectionString}">
				<commandText>
					INSERT INTO System_EmailLog
					(Name
					,ToName
					,ToAddress
					,Subject
					,Message
					,CreateTime
					,SubSystemCode
					,CustomData
					,ResponseCode
					,ResponseMessage)
					VALUES
					(@Name
					,@ToName
					,@ToAddress
					,@Subject
					,@Message
					,@CreateTime
					,@SubSystemCode
					,@CustomData
					,@ResponseCode
					,@ResponseMessage
					)
				</commandText>

				<!-- 参数 -->
				<parameter name="@Name" layout="${event-context:item=Name}" />
				<parameter name="@ToName" layout="${event-context:item=ToName}" />
				<parameter name="@ToAddress" layout="${event-context:item=ToAddress}" />
				<parameter name="@Subject" layout="${event-context:item=Subject}" />
				<parameter name="@Message" layout="${event-context:item=Message}" />
				<parameter name="@CreateTime" layout="${event-context:item=CreateTime}" />
				<parameter name="@SubSystemCode" layout="${event-context:item=SubSystemCode}" />
				<parameter name="@CustomData" layout="${event-context:item=CustomData}" />
				<parameter name="@ResponseCode" layout="${event-context:item=ResponseCode}" />
				<parameter name="@ResponseMessage" layout="${event-context:item=ResponseMessage}" />
			</target>
		</target>

	</targets>

	<!-- 规则 -->
	<rules>
		<!--TRACE,DEBUG,INFO,WARN,ERROR,FATAL-->

		<!--Microsoft开头的不写入日志-->
		<logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />

		<!--其他文件-->
		<logger name="SystemFileTraceLog" minlevel="Trace" writeTo="SystemFileTraceLog" />
		<logger name="SystemFileDebugLog" minlevel="Debug" writeTo="SystemFileDebugLog" />
		<logger name="SystemFileInfoLog" minlevel="Info" writeTo="SystemFileInfoLog" />
		<logger name="SystemFileWarnLog" minlevel="Warn" writeTo="SystemFileWarnLog" />
		<logger name="SystemFileErrorLog" minlevel="Error" writeTo="SystemFileErrorLog" />
		<logger name="SystemFileFatalLog" minlevel="Fatal" writeTo="SystemFileFatalLog" />

		<!--操作日志-->
		<logger name="SystemOperationLog" minlevel="Info" writeTo="SystemOperationLog" />

		<!--异常日志-->
		<logger name="SystemExceptionLog" minlevel="Info" writeTo="SystemExceptionLog" />

		<!--登录日志-->
		<logger name="SystemLoginLog" minlevel="Info" writeTo="SystemLoginLog" />

		<!--登录日志退出-->
		<logger name="SystemLoginOutLog" minlevel="Info" writeTo="SystemLoginOutLog" />

		<!--限流日志-->
		<logger name="SystemRateLimitLog" minlevel="Info" writeTo="SystemRateLimitLog" />

		<!--任务日志-->
		<logger name="SystemJobLog" minlevel="Info" writeTo="SystemJobLog" />

		<!--短信日志-->
		<logger name="SaveSmsLog" minlevel="Info" writeTo="SaveSmsLog" />

		<!--邮件日志-->
		<logger name="SaveEmailLog" minlevel="Info" writeTo="SaveEmailLog" />

	</rules>
</nlog>